(define append
  (lambda (xs ys)
    (if (eq xs nil)
        ys
        (cons (car xs) (append (cdr xs) ys)))))

(define tagged-uqs
  (lambda (exp)
    (if (atom exp)
        nil
        (eq 'uqs (car exp)))))

(defmacro quasi (exp)
  (if (atom exp)
      (cons 'quote (cons exp nil))
      (if (if (eq 'uq (car exp)) t (eq 'uqs (car exp)))
          (car (cdr exp))
          (cons (if (tagged-uqs (car exp)) 'append 'cons)
                (cons (cons 'quasi (cons (car exp) nil))
                      (cons
                       (cons 'quasi (cons (cdr exp) nil))
                       nil))))))
